---
title: "Exercise 3"
format: html
---


#read librarys
```{r}
install.packages("SimilarityMeasures")
library(SimilarityMeasures)
library(dplyr)
library(readr)
library(sf)
library(terra)
library(ggplot2)
library(tidyr)

```



#Task a-c
```{r}
as.POSIXct("2015-07-01", tz ="UTC")

wildschwein_BE <- read_delim("wildschwein_BE_2056.csv", ",")

sabi <- wildschwein_BE |> 
  filter(TierName == "Sabi") |> 
  filter(DatetimeUTC >=as.POSIXct("2015-07-01", tz ="UTC"), DatetimeUTC < as.POSIXct("2015-07-03", tz ="UTC"))

ggplot(sabi, aes(E,N, color = DatetimeUTC))+
  geom_point()+
  geom_path()+
  coord_equal()

sabi |>
  head(50) |> 
  ggplot(aes(DatetimeUTC, 1))+
  geom_point()

 sabi<- sabi |> 
  mutate(
    n_plus1 = sqrt((lead(E,1)-E)^2 + (lead(N,1)-N)^2), 
    n_plus2 = sqrt((lead(E,2)-E)^2 + (lead(N,2)-N)^2),
    n_minus1= sqrt((lag(E,1)-E)^2 + (lag(N,1)-N)^2),
    n_minus2 = sqrt((lag(E,2)-E)^2 + (lag(N,2)-N)^2)
  )



sabi <- sabi |> 
  rowwise() |> 
  mutate(
    stepmean = mean(c(n_minus1, n_minus2, n_plus1, n_plus2))
  ) |> 
  ungroup()

ggplot(sabi, aes(stepmean))+
  geom_histogram(binwidth =10)+
  geom_vline(xintercept = mean(sabi$stepmean, na.rm = TRUE))

sabi |> 
  mutate(static = stepmean<mean(stepmean, na.rm=TRUE)) |> 
  ggplot(aes(E,N))+
  geom_point(aes(colour = static))+
  geom_path()+
  coord_fixed()

```


#Preparation, own Data?
```{r}

library("readr")
library("sf")

posmo <- read_delim("posmo_2023.csv", ",")


# Keep only the necessary columns
posmo <- select(posmo, datetime, lon_x, lat_y)


posmo <- st_as_sf(posmo, coords = c("lon_x","lat_y"), crs = 4326) |>
  st_transform(2056)

head(posmo)

posmo_coordinates <- st_coordinates(posmo)

posmo <- cbind(posmo, posmo_coordinates)

posmo_filter <- posmo |>
    filter(as.Date(datetime) == "2023-04-23")


```


#Task 1

```{r}
# posmo_filter <- posmo_filter |> 
#   filter(datetime >=as.POSIXct("", tz ="UTC"), datetime < as.POSIXct("", tz ="UTC"))

ggplot(posmo_filter, aes(X,Y, color = datetime))+
  geom_point()+
  geom_path()+
  coord_equal()

posmo_filter|>
  head(300) |> 
  ggplot(aes(datetime, 1))+
  geom_point()

 posmo_filter <- posmo_filter |> 
  mutate(
    n_plus1 = sqrt((lead(X,20)-X)^2 + (lead(Y,20)-Y)^2), 
    n_plus2 = sqrt((lead(X,40)-X)^2 + (lead(Y,40)-Y)^2),
    n_minus1 = sqrt((lag(X,20)-X)^2 + (lag(Y,20)-Y)^2), 
    n_minus2 = sqrt((lag(X,40)-X)^2 + (lag(Y,40)-Y)^2)
  )



posmo_filter <- posmo_filter |> 
  rowwise() |> 
  mutate(
    stepmean = mean(c(n_minus1, n_minus2, n_plus1, n_plus2))
  ) |> 
  ungroup()

ggplot(posmo_filter, aes(stepmean))+
  geom_histogram(binwidth =10)+
  geom_vline(xintercept = mean(posmo_filter$stepmean, na.rm = TRUE))

  
posmo_filter2 |> 
  ggplot(aes(X,Y))+
  geom_point(aes(colour = static))+
  geom_path()+
  coord_fixed()


posmo_filter <- posmo_filter |>
    ungroup() |>
    mutate(static =  stepmean<200, na.rm=TRUE)|>
    drop_na(static)

ggplot(posmo_filter, aes(X,Y)) +
  geom_path() +
  geom_point(aes(color = static)) +
  coord_equal()

```


#Task 4
```{r}
rle_id <- function(vec) {
    x <- rle(vec)$lengths
    as.factor(rep(seq_along(x), times = x))
}

posmo_filter <- posmo_filter |>
    mutate(segment_id = rle_id(static))

ggplot(posmo_filter, aes(X,Y)) +
  geom_path() +
  geom_point(aes(color = segment_id)) +
  coord_equal()



```


#Task 5

```{r}
pedestrian <- read_delim("pedestrian.csv")
?DTW

path1 <- pedestrian |> 
  filter(TrajID == 1) |> 
  select(E,N) |> 
  as.matrix()

path2 <- pedestrian |> 
  filter(TrajID == 2) |>
  select(E,N) |> 
  as.matrix()

path3 <- pedestrian |> 
  filter(TrajID == 3) |>
  select(E,N) |> 
  as.matrix()

path4 <- pedestrian |> 
  filter(TrajID == 4) |>
  select(E,N) |> 
  as.matrix()

path5 <- pedestrian |> 
  filter(TrajID == 5) |>
  select(E,N) |> 
  as.matrix()

path6 <- pedestrian |> 
  filter(TrajID == 6) |>
  select(E,N) |> 
  as.matrix()



dtw12 <- DTW(path1, path2)
dtw13 <- DTW(path1, path3)
dtw14 <- DTW(path1, path4)
dtw15 <- DTW(path1, path5)
dtw16 <- DTW(path1, path6)

f12 <- Frechet(path1,path2)
f13 <- Frechet(path1,path3)
f14 <- Frechet(path1,path4)
f15 <- Frechet(path1,path5)
f16 <- Frechet(path1,path6)

lcss12<- LCSS(path1, path2)
lcss13<- LCSS(path1, path3)
lcss14<- LCSS(path1, path4)
lcss15<- LCSS(path1, path5)
lcss16<- LCSS(path1, path6)

ed12 <- EditDist(path1, path2)
ed13 <- EditDist(path1, path3)
ed14 <- EditDist(path1, path4)
ed15 <- EditDist(path1, path5)
ed16 <- EditDist(path1, path6)



str(pedestrian)
```


